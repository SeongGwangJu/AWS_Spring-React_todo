<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--repository폴더의 mapper와 연결-->
<mapper namespace="com.spring_review.todo.repository.UserMapper">
    <!--join을 할 때는 Map 형식이 필요하다.    -->
    <resultMap id="userResultMap" type="com.spring_review.todo.entity.User">
        <id property="userId"       column="user_id" />  <!--표기법이 다름에 유의 -->
        <result property="email"    column="email" />
        <result property="name"     column="name" />
        <result property="password" column="password" />
        <result property="provider" column="provider" />
        <collection property="authorities" javaType="list" resultMap="authorityResultMap" />
    </resultMap>

    <resultMap id="authorityResultMap" type="com.spring_review.todo.entity.Authority">
        <id property="authorityId"  column="authority_id" />
        <result property="userId"   column="at_user_id" /> <!--FK -->
        <result property="roleId"   column="at_role_id" /> <!--FK -->
        <association property="role" resultMap="roleResultMap" />
        <!--아래의 roleMap이 위의 'resultMap='으로 연결(join)된다 -->
    </resultMap>

    <resultMap id="roleResultMap" type="com.spring_review.todo.entity.Role">
        <id property="roleId" column="role_id"></id>
        <result property="roleName" column="role_name" />
    </resultMap>


    <insert id="saveUser" parameterType="com.spring_review.todo.entity.User">
        insert into user_tb
        values(0, #{email}, #{name}, #{password}, #{provider})
    </insert>

<!--    <select id="findUserByEmail"-->
<!--            parameterType="string"-->
<!--            resultMap="userResultMap">-->
<!--        select-->
<!--            user_id,-->
<!--            email,-->
<!--            name,-->
<!--            password,-->
<!--            provider-->
<!--        from-->
<!--            user_tb-->
<!--        where-->
<!--            email = #{email}-->
<!--    </select>-->

    <select id="findUserByEmail"
            parameterType="string"
            resultMap="userResultMap">
        select
            ut.user_id,
            ut.email,
            ut.password,
            ut.name,

            at.authority_id,
            at.user_id as at_user_id,
            at.role_id as at_role_id,

            rt.role_id,
            rt.role_name

        from
            user_tb ut
            left outer join authority_tb at on(at.user_id = ut.user_id)
            left outer join role_tb rt on(rt.role_id = at.role_id)

        where
            email = #{email}

    </select>

    <select id="getUserCountByEmail"
            parameterType="string"
            resultType="integer">
        select
            count(*)
        from
            user_tb ut
        where
            ut.email = #{email}
    </select>


</mapper>